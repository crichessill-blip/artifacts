cat << EOF > fe-server-tls-policy.yaml
name: ${PREFIX}-policy-1
mtlsPolicy:
    clientValidationMode: REJECT_INVALID
    clientValidationTrustConfig: projects/${PROJECT_ID}/locations/global/trustConfigs/${PREFIX}-trust-config-ext-1
EOF

#34.107.136.149

#curl -vv https://sg-test-producer.com/server.php --resolve sg-test-producer.com:443:107.178.246.38
curl -v https://35.241.21.34/server.php
# Passing only server cert - No Domain name
curl -v https://34.107.136.149/server.php --cacert ./server.crt # fails SAN check

# Passing only server cert - w/ Domain Name 
curl -v --cacert ./server.crt https://san-gxlb.com/server.php \
        --resolve san-gxlb.com:443:34.107.136.149 # fails because server expects mTLS

## Passing only client cert
curl -v --cert ./fe-client.cert --key ./fe-client.key https://san-gxlb.com/server.php --resolve san-gxlb.com:443:35.227.234.215
# curl failed to verify the legitimacy of the server and therefore could not
# establish a secure connection to it. To learn more about this situation and
## Passing both client certificate and server (Happy Path)
curl -v --cert ./fe-client.cert \
        --key ./fe-client.key \
        --cacert ./server.crt https://san-gxlb.com/server.php \
        --resolve san-gxlb.com:443:34.107.136.149

#frontend success
openssl s_client -connect 34.107.136.149:443 -showcerts
curl -v --cert ./fe-client.cert \
        --key ./fe-client.key \
        --cacert ./server.crt https://san-gxlb.com/server.php \
        --resolve san-gxlb.com:443:34.107.136.149

#No SAN Match
# subjectAltName does not match host name wrong.example.com
# * SSL: no alternative certificate subject name matches target host name 'wrong.example.com'
# * Closing connection
# curl: (60) SSL: no alternative certificate subject name matches target host name 'wrong.example.com'
# More details here: https://curl.se/docs/sslcerts.html

# curl failed to verify the legitimacy of the server and therefore could not
# establish a secure connection to it. To learn more about this situation and
# how to fix it, please visit the web page mentioned above.
sanmaym-macbookpro:frontendsolo sanmaym$ 

curl -v --cert ./fe-client.cert \
         --key ./fe-client.key \
         --cacert ./server.crt \
         --resolve wrong.example.com:443:35.227.234.215 \
         https://wrong.example.com/server.php


#No SNI Match
openssl s_client -connect 35.227.234.215:443 < /dev/null
vs  
openssl s_client -connect 35.227.234.215:443 -servername san-gxlb.com < /dev/null

sudo security add-trusted-cert -d -r trustRoot -k /Library/Keychains/System.keychain server.crt


mutual backend service
https://cloud.google.com/load-balancing/docs/https/setting-up-mtls-ccm#add_mtls_custom_headers_to_backend_services
client leaf cert only
https://cloud.google.com/certificate-manager/docs/core-components#trust-configs
multiple clients for a given trust concifg-- 
https://cloud.google.com/certificate-manager/docs/core-components#trust-configs

subbu -> Are there any metrics which are exposed by Load Balancer for eg: mtls validation failures etc

additional CN matching

rotation period for certificate - validate

